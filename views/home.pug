extends ./layout

mixin Keywords(keywords)
  .keywords
    +FontIcon('fa-tags mright5')
    - var last = keywords.length - 1
    - var currentKeyword = viewData.query.keyword;
    each keyword, index in keywords
      if keyword === currentKeyword
        a.selected(href=URL('/')) #{keyword}
      else
        a(href=URL(`/?keyword=${keyword}`)) #{keyword}
      if index !== last
        span ,
mixin Counts(downloads, dependedCount)
  .counts
    each type in ['latest', 'week', 'month', 'quarter']
      div(class=type, title=`the download of ${type}`)
        span.type #{type}
        span.count #{numberFormat(downloads[type])}
    .depCount(title='the count of depended')
      span.type dep
      span.count #{numberFormat(dependedCount)}

mixin Modules(items)
  ul
    - var currentAuthor = viewData.query.author;
    each item in items
      li
        h4
          a.module(href=`https://npmjs.org/package/${item.name}`) #{item.name}
          span (#{item.latest.version})
          span.tips(data-content=item.about)
            +FontIcon('fa-question-circle-o')
          a(href='javascript:;', title='show download trend').download-trend.mleft10
            +FontIcon('fa-area-chart')
          a(href='javascript:;', title='add to compare').compare.mleft10
            +FontIcon('fa-link font14')
          a(href='javascript:;', title='star the module').star.mleft10
            +FontIcon('fa-star font14')
        p #{item.description}
        if item.keywords && item.keywords.length
          +Keywords(item.keywords)
        - var downloads = item.downloads
        if downloads
          +Counts(downloads, item.dependedCount)
        - var author = item.author && item.author.name
        .updatedAt
          if author
            +FontIcon('fa-user-circle-o mright5') 
            if currentAuthor === author
              a.author.selected(href=URL('/')) #{author}
            else
              a.author(href=URL(`/?author=${encodeURIComponent(author)}`)) #{author}
          span.mleft10 Published #{moment(item.latest.time).fromNow()} 

mixin HeaderView()
  header.header-wrapper
    .header-content
      .logo npm trend 
      .search-box: .search-component
        button.search
          +FontIcon('fa-search')
        a.clear(href='javascript:;')
          +FontIcon('fa-times')
        input(type='text', placeholder='Search modules you want')
      .functions
        a(href='javascript:;', title='Show the filter').filter
          +FontIcon('fa-filter')
        a(href='https://github.com/vicanso/npm-trend', title='Fork me')
          +FontIcon('fa-github')
        a.login.hidden(href='https://github.com/login/oauth/authorize?client_id=04e3e64ca25edf31751e', title='Login')
          +FontIcon('fa-sign-in')
        a.user.hidden(href='javascript:;', title='Logout')
    .user-functions.tooltip.hidden
      .arrow-up
      .arrow-up-shadow
      ul
        li
          a.my-stars(href='javascript:;')
            +FontIcon('fa-star mright5')
            | My Stars
        li
          a.logout(href='javascript:;')
            +FontIcon('fa-sign-out mright5')
            | Logout
      

mixin FilterView()
  .filter-wrapper.hidden
    mixin FilterItems(data)
      each desc, key in data 
        li: a(data-key=key, href='javascript:;') #{desc}
    ul(data-type='sort')
      li.name
        +FontIcon('fa-sort')
        | SortBy
      +FilterItems(viewData.sorts)
    ul(data-type='updated')
      li.name
        +FontIcon('fa-magic')
        | UpdatedAt
      +FilterItems(viewData.updatedAt)
    ul(data-type='created')
      li.name
        +FontIcon('fa-plus-square')
        | CreatedAt
      +FilterItems(viewData.createdAt)
    a.reset(href='javascript:;') Reset
block bodyContainer
  .home-view
    +HeaderView()
    +FilterView()
    .modules-count-wrapper There are
      span.count --
      | moudles.
    .modules-wrapper
      - var modules = viewData.modules;
      if !modules || !modules.length
        p.tac
          +FontIcon('fa-exclamation-triangle mright5')
          | No modules found
      else
        +Modules(modules)
  - importer.import('/css/home.css')
